name: Integration Test
# Run integration test 

on:
  workflow_call:
    inputs:
      TARGET_ENV:
        description: 'What environment are we targeting: staging, production, etc'
        required: true
        type: string
      TARGET_APP:
        description: 'The name of the app instance in heroku (i.e. grid-orchestrator-sandbox, grid-orchestrator-staging, grid-orchestrator)'
        required: true
        type: string
      REVIEW_APP_NAME:
        description: 'The name of the review app that is associated with this PR'
        required: true
        type: string
      REVIEW_APP_URL:
        description: 'The url of the review app that is associated with this PR'
        required: true
        type: string

jobs:

  integration_test_job:
    name: Integration Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.x'

      - name: Authenticate with private NPM package
        env:
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: rm .npmrc && echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install Dependencies
        run: npm ci

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login To Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_TOKEN }}
          heroku_email: ${{ secrets.SYSTEM_EMAIL }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          justlogin: true

      - name: Get project env variables
        id: test
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          NODE_ENV: ${{ inputs.TARGET_ENV }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          HEROKU_API_KEY=$HEROKU_API_TOKEN heroku config -a ${{ inputs.TARGET_APP }} > env.yaml
          for keyval in $(grep -E ':\s+' env.yaml | sed -e 's/: */=/'); do
            echo $keyval >> .env
          done

      - name: Run Integration Tests
        run: npm run integration-${{ inputs.TARGET_ENV }} ${{ inputs.REVIEW_APP_URL }}
      
      - name: Fail Check
        if: failure()
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        with:
          allow-repeats: true
          message: |
            @${{ github.actor }} the `${{ github.job }}` job failed ðŸ˜§. Please check the `${{ github.job }}`'s summary page, download the `test-report` artifact, and update your failing tests.