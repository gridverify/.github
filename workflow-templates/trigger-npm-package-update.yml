name: Trigger NPM Package Update
# Trigger projects to update one of thier package versions

on:
  workflow_call:
    inputs:
      TARGET_ENV:
        description: 'What environment are we targeting: staging, production, etc'
        required: true
        type: string
      TARGET_APP:
        description: 'The name of the app instance in heroku (i.e. grid-orchestrator-sandbox, grid-orchestrator-staging, grid-orchestrator)'
        required: true
        type: string
      TARGET_REPO_OWNER:
        description: 'The repository owner usually the github organization or personal github name'
        required: true
        type: string
        default: gridverify
      TARGET_REPO_NAME:
        description: 'The name of the repo in github that we are looking to update the package in'
        required: true
        type: string
      PACKAGE_NAME:
        description: 'The name of the package to update in the target repo'
        required: true
        type: string
      PACKAGE_VERSION:
        description: 'The version to update to, if not present then just update to the latest'
        required: false
        type: string
        default: ''

jobs:

  trigger_package_update_job:
    name: Trigger Package Update Job
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
      EVENT_TYPE: trigger-npm-package-update
      PR_AGENTS: pr-agents
      PR_ORCHESTRATOR: pr-orchestrator
      PR_API_GATEWAY: pr-api-gateway
    steps:
      - name: Get PR for push
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: pr_info
        with:
          filterOutClosed: false
          filterOutDraft: true

      - name: Extract By Pass Labels
        id: bypass_labels
        run: |
          if [[ "${{ steps.pr_info.outputs.pr_labels }}" == *"${{ env.PR_AGENTS }}"* ]]; then
            echo ::set-output name=is_pr_agents::true
          else
            echo ::set-output name=is_pr_agents::false
          fi 

          if [[ "${{ steps.pr_info.outputs.pr_labels }}" == *"${{ env.PR_ORCHESTRATOR }}"* ]]; then
            echo ::set-output name=is_pr_orchestrator::true
          else
            echo ::set-output name=is_pr_orchestrator::false
          fi 

          if [[ "${{ steps.pr_info.outputs.pr_labels }}" == *"${{ env.PR_API_GATEWAY }}"* ]]; then
            echo ::set-output name=is_pr_api_gateway::true
          else
            echo ::set-output name=is_pr_api_gateway::false
          fi 

      - name: Determine If We Create Candidate PRs
        id: bypass
        run: |
          if [[ "${{ inputs.TARGET_REPO_NAME }}" == *"agents"* ]] && [[ "${{ steps.bypass_labels.outputs.is_pr_agents }}" == *"true"* ]]; then
            echo ::set-output name=is_pr::true
          elif [[ "${{ inputs.TARGET_REPO_NAME }}" == *"orchestrator"* ]] && [[ "${{ steps.bypass_labels.outputs.is_pr_orchestrator }}" == *"true"* ]]; then
            echo ::set-output name=is_pr::true
          elif [[ "${{ inputs.TARGET_REPO_NAME }}" == *"api-gateway"* ]] && [[ "${{ steps.bypass_labels.outputs.is_pr_api_gateway }}" == *"true"* ]]; then
            echo ::set-output name=is_pr::true
          else
            echo ::set-output name=is_pr::false
          fi 

      - name: Trigger Package Update
        if: ${{ steps.bypass.outputs.is_pr == 'true' }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_API_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ inputs.TARGET_REPO_OWNER }}/${{ inputs.TARGET_REPO_NAME }}/dispatches \
            -d "{\"event_type\": \"${{ env.EVENT_TYPE }}\", \"client_payload\": {\"package_name\": \"${{ inputs.PACKAGE_NAME }}\", \"package_version\": \"${{ inputs.PACKAGE_VERSION }}\", \"origin_author\": \"${{ github.actor }}\"}}"