name: Deploy Sentry
# Deploy a release to Sentry so that it can symbolicate errors, crashes, etc. Should be ran after each staging and production deployment.

on: 
  workflow_call:
    inputs: 
      TARGET_ENV:
        description: 'What environment are we targeting: staging, production, etc'
        required: true
        type: string
      TARGET_APP:
        description: 'The name of the app instance in heroku (i.e. grid-orchestrator-sandbox, grid-orchestrator-staging, grid-orchestrator)'
        required: true
        type: string
      SOURCE_MAPS:
        description: 'Space-separated list of paths to JavaScript sourcemaps to symbolicate crashes, erorrs, etc. This should be the folder where the build outputs everything.'
        default: './dist'
        required: false
        type: string

jobs:
  release_in_sentry_job:
    name: Sentry Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.x'
          cache: 'npm'
      - name: Authenticate with private NPM package
        env:
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: rm .npmrc && echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
      - name: Install Dependencies
        run: npm ci
      - name: Login To Heroku + Build Server
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          NODE_ENV: ${{ inputs.TARGET_ENV }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          HEROKU_API_KEY=$HEROKU_API_TOKEN heroku config -a ${{ inputs.TARGET_APP }} > env.yaml 
          for keyval in $(grep -E ':\s+' env.yaml | sed -e 's/: */=/'); do
            echo $keyval >> .env
          done
          npm run build --loglevel error
      - name: Read Build From package.json
        id: build-number
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'build'
      - name: Store Build Number
        run: |
          echo "build_number=${{steps.build-number.outputs.prop}}" >> $GITHUB_ENV
      - name: Read Version From package.json
        id: version-number
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: Store Version Number
        run: |
          echo "version_number=${{steps.version-number.outputs.prop}}" >> $GITHUB_ENV
      - name: Create Sentry Release
        uses: getsentry/action-release@v1.7.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          ignore_missing: true
          environment: ${{ inputs.TARGET_ENV }}
          version: ${{ secrets.SENTRY_PROJECT }}@${{ env.version_number }}+${{env.build_number}}
          finalize: true
          set_commits: auto
          sourcemaps: ${{ inputs.SOURCE_MAPS }}
          ignore_empty: true