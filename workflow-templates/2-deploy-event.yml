name: Deploy Event

on:
  push:
    branches:
      - main

  pull_request: # represents push to `production` coupled with checking if merged
    types: [closed]
    branches: 
      - production

jobs: 
  Setup-Init-CI-Vars:
    uses: ./.github/workflows/setup-init-ci-vars.yml
    secrets: inherit

  Create-Hotfix-PR:
    if: github.ref_name == 'main'
    uses: ./.github/workflows/create-hotfix-pr.yml
    secrets: inherit
    with: 
      TARGET_ENV: ${{ needs.Setup-Init-CI-Vars.outputs.ENV_NAME }}
      TARGET_APP: ${{ needs.Setup-Init-CI-Vars.outputs.APP_NAME }}

  Deploy-Staging:
    if: github.ref_name == 'main'
    needs: ['Setup-Init-CI-Vars']
    strategy:
      fail-fast: false
      matrix:
        instance: ['grid-orchestrator-ui-staging', 'grid-orchestrator-ui-sandbox']
    uses: ./.github/workflows/deploy-heroku-instances.yml
    with:
      instance: ${{ matrix.instance }}
    secrets: inherit

  Deploy-Production:
    if: ${{ github.event.pull_request.base.ref == 'production' && github.event.pull_request.merged == true }}
    needs: ['Setup-Init-CI-Vars']
    strategy:
      fail-fast: false
      matrix:
        instance: ['grid-orchestrator-ui']
    uses: ./.github/workflows/deploy-heroku-instances.yml
    with:
      instance: ${{ matrix.instance }}
    secrets: inherit

  Deploy-Sentry:
    needs: ['Setup-Init-CI-Vars']
    uses: ./.github/workflows/deploy-sentry.yml
    secrets: inherit
    with: 
      TARGET_ENV: ${{ needs.Setup-Init-CI-Vars.outputs.ENV_NAME }}
      TARGET_APP: ${{ needs.Setup-Init-CI-Vars.outputs.APP_NAME }}
      SOURCE_MAPS: './src/build'

  Post-Deploy:
    needs: ['Deploy-Sentry']
    uses: ./.github/workflows/post-deploy.yml
    secrets: inherit
    with: 
      TARGET_ENV: ${{ needs.Setup-Init-CI-Vars.outputs.ENV_NAME }}
      TARGET_APP: ${{ needs.Setup-Init-CI-Vars.outputs.APP_NAME }}