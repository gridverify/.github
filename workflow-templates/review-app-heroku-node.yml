name: Review App Heroku Node
# Create and deploy a branch to a Heroku Review App according to the PR. This is for 
# NodeJS based apps.

on:
  workflow_call:
    inputs:
      TARGET_ENV:
        description: 'What environment are we targeting: staging, production, etc'
        required: true
        type: string
      TARGET_APP:
        description: 'The name of the app instance in heroku (i.e. grid-orchestrator-sandbox, grid-orchestrator-staging, grid-orchestrator)'
        required: true
        type: string
      STAGE_NAME:
        description: 'The name of the Heroku pipeline stage for the Review Apps.'
        default: 'development'
        required: false
        type: string

jobs:
  deploy_to_review_app_job:
    name: Deploy To Review App Job
    runs-on: ubuntu-latest
    env:
      HEROKU_APP_NAME: review-app-pr-${{ github.event.number }}
      TARGET_APP: ${{ inputs.TARGET_APP }}
      PIPELINE_NAME: ${{ secrets.HEROKU_PIPELINE_NAME }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event.action == 'closed' && 1 || 0 }}
          ref: ${{ github.event.action != 'closed' && github.head_ref || '' }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.x'
          cache: 'npm'

      - name: Authenticate with private NPM package
        run: rm .npmrc && echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install Dependencies
        run: npm ci

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login To Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_TOKEN }}
          heroku_email: ${{ secrets.SYSTEM_EMAIL }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          justlogin: true

      - name: Check If Heroku App Already Exists
        run: heroku domains --app=${{ env.HEROKU_APP_NAME }} && echo "app_exists=true" >> "$GITHUB_ENV"
        continue-on-error: true

      - name: Create Heroku App
        if: ${{ !env.app_exists }}
        run: heroku apps:create ${{ env.HEROKU_APP_NAME }} --team=grid --addons=papertrail

      - name: Add Heroku App To Pipeline
        if: ${{ !env.app_exists }}
        run: heroku pipelines:add ${{ env.PIPELINE_NAME }} --app=${{ env.HEROKU_APP_NAME }} --stage=${{ inputs.STAGE_NAME }}

      - name: Copy Environment Variables To Heroku app
        run: |
          heroku config --shell --app=${{ env.TARGET_APP }} > .env
          sed -i -e 's/LIMITER_MAX=[0-9]\{1,\}/LIMITER_MAX=1000/' .env
          cat .env | tr '\n' ' ' | xargs heroku config:set --app=${{ env.HEROKU_APP_NAME }}

      - name: Add Heroku Remote
        run: heroku git:remote --app=${{ env.HEROKU_APP_NAME }}

      - name: Push To Heroku
        run: git push heroku ${{ github.head_ref }}:main --force

      # IF NEEDED:
      # - name: Scale Dyno Type # Put this at the end to give the dyno time
      #   if: ${{ !env.app_exists }}
      #   run: heroku ps:scale web=1:Standard-2x --app=${{ env.HEROKU_APP_NAME }}